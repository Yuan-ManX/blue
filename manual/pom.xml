<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.kunstmusik</groupId>
        <artifactId>blue-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>blue-manual</artifactId>

    <build>
        <plugins>
            <plugin>
                <groupId>com.agilejava.docbkx</groupId>
                <artifactId>docbkx-maven-plugin</artifactId>
                <version>2.0.17</version>
                <dependencies>
                    <!--<dependency>-->
                    <!--    <groupId>org.docbook</groupId>-->
                    <!--    <artifactId>docbook-xml</artifactId>-->
                    <!--    <version>4.4</version>-->
                    <!--    <scope>runtime</scope>-->
                    <!--</dependency>-->
                    <!--<dependency>-->
                    <!--  <groupId>net.sf.offo</groupId>-->
                    <!--  <artifactId>fop-hyph</artifactId>-->
                    <!--  <version>2.0</version>-->
                    <!--  <scope>runtime</scope>-->
                    <!--</dependency>-->
                </dependencies>

                <executions>
                    <execution>
                        <id>default</id>
                        <!-- Generate docbook as part of the generate-sources phase. -->
                        <phase>generate-sources</phase>

                        <!-- Generate PDF and XHTML5 output. -->
                        <goals>
                            <goal>generate-html</goal>
                            <!--<goal>generate-pdf</goal>-->
                        </goals>
                        <configuration>
                            <!-- I put my source in src/main/docbook. -->
                            <sourceDirectory>src/main/docbook</sourceDirectory>
                            <htmlCustomization>src/main/stylesheets/customXHTMLchunk.xsl</htmlCustomization>
                            <!-- A comma separated list of top level docbook documents - book, article, and refpage -->
                            <includes>index.xml</includes>
<!--                            <xincludeSupported>true</xincludeSupported>-->
                            <!--              <chapterAutolabel>true</chapterAutolabel>-->
                            <!--              <sectionAutolabel>true</sectionAutolabel>-->
                            <!--              <sectionAutolabelMaxDepth>5</sectionAutolabelMaxDepth>-->
                            <!--              <sectionLabelIncludesComponentLabel>true</sectionLabelIncludesComponentLabel>-->

                            <!-- By default, docbkx doesn't know how to include any other resources in its output. In order to get my sd.css
                                 file into the output, I use a preprocess section (which is a bunch of ant commands) to copy everything in
                                 src/main/docbook-resources/xhtml5 into the xhtml5 generated output directory target/docbkx/xhtml5/. -->
                            <preProcess>
                                <copy todir="${project.build.directory}/docbkx/html/images/">
                                    <fileset dir="src/main/docbook/images/"/>
                                </copy>
                                <copy file="src/main/docbook/index.xml.in" tofile="src/main/docbook/index.xml"
                                      overwrite="true"/>

                                <replace file="src/main/docbook/index.xml" token="[[version]]"
                                         value="${project.version}"/>

                            </preProcess>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
</project>
