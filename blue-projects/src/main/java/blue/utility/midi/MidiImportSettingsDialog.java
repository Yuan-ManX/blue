/*
 * MidiImportSettingsDialog.java
 *
 * Created on January 14, 2007, 7:29 PM
 */

package blue.utility.midi;


import blue.utility.GUI;
import java.awt.Frame;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

/**
 * 
 * @author steven
 */
public class MidiImportSettingsDialog extends javax.swing.JDialog {

    private static String REFERENCE = "<INSTR_ID> - Instrument ID\n"
            + "<START> - Start time of note\n" + "<DUR> - Duration of note\n"
            + "<KEY> - MIDI key Number\n"
            + "<KEY_PCH> - MIDI key number as Csound PCH\n"
            + "<KEY_OCT> - MIDI key number as Csound OCT\n"
            + "<KEY_CPS> - MIDI key number as CPS\n"
            + "<VELOCITY> - MIDI velocity number\n"
            + "<VELOCITY_AMP> - MIDI velocity number as amplitude";

    private static MidiImportSettingsDialog dialog = null;

    boolean retVal = false;

    /** Creates new form MidiImportSettingsDialog */
    public MidiImportSettingsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public static boolean ask(Frame root, MidiImportSettings settings) {
        if (dialog == null) {
            dialog = new MidiImportSettingsDialog(root, true);
            GUI.centerOnScreen(dialog);
        }
        dialog.retVal = false;
        dialog.setMidiImportSettings(settings);
        dialog.setVisible(true);

        return dialog.retVal;
    }

    public void setMidiImportSettings(MidiImportSettings settings) {
        settingsTable.setModel(settings);

        settingsTable.getColumnModel().getColumn(0).setWidth(100);
        settingsTable.getColumnModel().getColumn(1).setWidth(150);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        settingsTable = new javax.swing.JTable();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        referenceButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MIDI Import Settings");

        settingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(settingsTable);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        referenceButton.setText("Reference");
        referenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                referenceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(referenceButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 385, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, cancelButton, okButton);

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton)
                    .addComponent(referenceButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void referenceButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_referenceButtonActionPerformed
        NotifyDescriptor nd = new NotifyDescriptor.Message(REFERENCE, NotifyDescriptor.INFORMATION_MESSAGE);
        DialogDisplayer.getDefault().notify(nd);
    }// GEN-LAST:event_referenceButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okButtonActionPerformed
        retVal = true;
        this.setVisible(false);
    }// GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
        retVal = false;
        this.setVisible(false);
    }// GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(() -> {
            new MidiImportSettingsDialog(new javax.swing.JFrame(), true)
                    .setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JButton referenceButton;
    private javax.swing.JTable settingsTable;
    // End of variables declaration//GEN-END:variables

}
