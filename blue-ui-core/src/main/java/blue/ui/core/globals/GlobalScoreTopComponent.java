/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package blue.ui.core.globals;

import blue.GlobalOrcSco;
import blue.projects.BlueProject;
import blue.projects.BlueProjectManager;
import blue.ui.nbutilities.MimeTypeEditorComponent;
import blue.ui.utilities.SimpleDocumentListener;
import java.awt.BorderLayout;
import java.beans.PropertyChangeEvent;
import javax.swing.event.DocumentEvent;
import javax.swing.undo.UndoManager;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.awt.ActionReferences;
import org.openide.awt.UndoRedo;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
//import org.openide.util.Utilities;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//blue.ui.core.globals//GlobalScore//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "GlobalScoreTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = true,
        position = 600)
@ActionID(category = "Window", id = "blue.ui.core.globals.GlobalScoreTopComponent")
@ActionReferences({
    @ActionReference(path = "Menu/Window", position = 1500),
    @ActionReference(path = "Shortcuts", name = "D-6")
})
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_GlobalScoreAction",
        preferredID = "GlobalScoreTopComponent"
)
@NbBundle.Messages({
    "CTL_GlobalScoreAction=Global Score",
    "CTL_GlobalScoreTopComponent=Global Score",
    "HINT_GlobalScoreTopComponent=This is a Global Score window"
})
public final class GlobalScoreTopComponent extends TopComponent {

    private static GlobalScoreTopComponent instance;

    private GlobalOrcSco globalOrcSco = null;

    MimeTypeEditorComponent scoreText = new MimeTypeEditorComponent(
            "text/x-csound-sco");

    UndoManager undo = new UndoRedo.Manager();

    private GlobalScoreTopComponent() {
        initComponents();

        setName(NbBundle.getMessage(GlobalScoreTopComponent.class,
                "CTL_GlobalScoreTopComponent"));
        setToolTipText(NbBundle.getMessage(GlobalScoreTopComponent.class,
                "HINT_GlobalScoreTopComponent"));
//        setIcon(Utilities.loadImage(ICON_PATH, true));

        BlueProjectManager.getInstance().addPropertyChangeListener((PropertyChangeEvent evt) -> {
            if (BlueProjectManager.CURRENT_PROJECT.equals(
                    evt.getPropertyName())) {
                globalOrcSco = null;
                reinitialize();
            }
        });

        reinitialize();

        scoreText.getDocument().addDocumentListener(
                new SimpleDocumentListener() {

                    @Override
                    public void documentChanged(DocumentEvent e) {
                        if (globalOrcSco != null) {
                            globalOrcSco.setGlobalSco(scoreText.getText());
                        }
                    }
                });

        scoreText.setUndoManager(undo);
        scoreText.getDocument().addUndoableEditListener(undo);

        this.add(scoreText, BorderLayout.CENTER);
    }

    private void reinitialize() {
        BlueProject project = BlueProjectManager.getInstance().getCurrentProject();

        if (project == null) {
            scoreText.setText("");
            scoreText.getJEditorPane().setEditable(false);
        } else {
            GlobalOrcSco localGlobals = project.getData().getGlobalOrcSco();
            scoreText.setText(localGlobals.getGlobalSco());
            scoreText.getJEditorPane().setEditable(true);
            globalOrcSco = localGlobals;
        }
        undo.discardAllEdits();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
    }

}
