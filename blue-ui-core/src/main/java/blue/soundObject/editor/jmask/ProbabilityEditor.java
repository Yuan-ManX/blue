/*
 * ProbabilityEditor.java
 *
 * Created on March 15, 2007, 5:09 PM
 */

package blue.soundObject.editor.jmask;

import blue.soundObject.editor.jmask.probability.ProbabilityEditorFactory;
import blue.soundObject.jmask.Probability;
import blue.soundObject.jmask.probability.ProbabilityGenerator;
import java.awt.BorderLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;

/**
 * 
 * @author steven
 */
public class ProbabilityEditor extends javax.swing.JPanel implements DurationSettable {

    Probability probability = null;
    
    double duration = 1.0;
    private DurationSettable currentProbabilityGeneratorEditor;

    /** Creates new form ProbabilityEditor */
    public ProbabilityEditor(Probability probability) {
        initComponents();

        ProbabilityGenerator[] generators = probability.getGenerators();
        Object[] values = new Object[generators.length];
        
        for (int i = 0; i < generators.length; i++) {
            values[i] = generators[i].getName();
        }

        probabilityTypeComboBox.setModel(new DefaultComboBoxModel(values));
        
        probabilityTypeComboBox.setSelectedIndex(probability.getSelectedIndex());
        
        this.probability = probability;
        
        this.probabilityTypeComboBox.setSelectedIndex(probability.getSelectedIndex());
        updateSelectedProbabilityEditor();
    }
    
    @Override
    public void setDuration(double duration) {
        this.duration = duration;
        
        if(currentProbabilityGeneratorEditor != null) {
            currentProbabilityGeneratorEditor.setDuration(duration);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        probabilityTypeComboBox = new javax.swing.JComboBox();
        editorPanel = new javax.swing.JPanel();

        jLabel1.setText("Probability");

        probabilityTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        probabilityTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                probabilityTypeComboBoxActionPerformed(evt);
            }
        });

        editorPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(probabilityTypeComboBox, 0, 326, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(editorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(probabilityTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void probabilityTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_probabilityTypeComboBoxActionPerformed
        if(this.probability != null) {
            this.probability.setSelectedIndex(probabilityTypeComboBox.getSelectedIndex());
            updateSelectedProbabilityEditor();
        }
    }//GEN-LAST:event_probabilityTypeComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel editorPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox probabilityTypeComboBox;
    // End of variables declaration//GEN-END:variables

    private void updateSelectedProbabilityEditor() {

        this.editorPanel.removeAll();
        JComponent selectedProbabilityGeneratorEditor =
                ProbabilityEditorFactory.getView(probability.getSelectedProbabilityGenerator());

        if (selectedProbabilityGeneratorEditor != null) {
            this.editorPanel.add(selectedProbabilityGeneratorEditor, BorderLayout.CENTER);
            this.currentProbabilityGeneratorEditor = (DurationSettable) selectedProbabilityGeneratorEditor;
            this.currentProbabilityGeneratorEditor.setDuration(this.duration);
        }
        revalidate();
    }

}
